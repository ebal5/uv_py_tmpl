name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        
      - name: Setup UV cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          . .venv/bin/activate
          uv pip install -e ".[dev]"
      - name: Test with pytest
        run: |
          . .venv/bin/activate
          uv run pytest --cov=src --cov-report=xml
      # Codecov upload is optional and requires a token
      # Uncomment and add CODECOV_TOKEN secret if you want to use Codecov
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     file: ./coverage.xml
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     fail_ci_if_error: true